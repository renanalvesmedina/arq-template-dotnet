---

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
    - README.md
    - src/libs/*
    - docs/*
    - mkdocs.yml
    - docs-pipelines.yml

pr:
  - master

resources:
  repositories:
    - repository: ssd.do.pipelines-templates
      type: git
      name: global-platform/ssd.do.pipelines-templates
      ref: refs/heads/master

stages:
  - stage: BUILD
    displayName: 'Dotnet Build, Test and Publish'

    jobs:
    - job: dotnet_build_and_publish_image_dev

      pool:
        name: 'Azure Pipelines'
        vmImage: 'ubuntu-22.04'

      variables:
        buildConfiguration: 'Release'
        sonarQubeProjectName: 'RepoNameTemplate'
        sonarQubeProjectKey: 'RepoNameTemplate'
        dotnetVersion: '6.0.x'
        Agent.Source.Git.ShallowFetchDepth: 0

      steps:
      - template: template-compose/dotnet/buildTestAndPublish.yml@ssd.do.pipelines-templates
        parameters:
          fortifyApplicationName: 'FortifyAppTemplate'
          fortifyEntryPointFolder: './src/EntrypointFullNamespace'
          chart_path: 'helm/AppNameTemplate'
          sonarQubeProjectKey: '$(sonarQubeProjectKey)'
          sonarQubeProjectName: '$(sonarQubeProjectName)'
          buildConfiguration: '$(buildConfiguration)'
          dotnetVersion: '$(dotnetVersion)'
          projects: 'FullNamespace.sln'
          nugetConfigFilePath: 'nuget.config'
          testProjects: '**/tests/**/*Tests.csproj'
          publishArguments: '--output $(System.DefaultWorkingDirectory)/app'
          publishCondition: and(succeeded(), or(eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), true), eq(startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), true)))
          publishProjects: |
            **/src/**/EntrypointFullNamespace.csproj
          contents: |
            helm/AppNameTemplate/**
          contentsDocker: |
            .dockerignore
            src/EntrypointFullNamespace/Dockerfile
            app/**

  - stage: DOCKER
    displayName: 'Docker build and push image'
    dependsOn: BUILD
    condition: and(succeeded('BUILD'), or(eq(eq(variables['Build.SourceBranch'], 'refs/heads/master'), true), eq(startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'), true)))

    jobs:
    - job: dotnet_build_and_publish_image_dev

      pool:
        name: 'Santander'

      variables:
      - group: 'Env dev_d1 - v2'
      - name: imageName
        value: 'K8sNamespaceTemplate/AppNameTemplate'

      steps:
      - template: template-compose/docker/buildAndPush.yml@ssd.do.pipelines-templates
        parameters:
          artifactName: 'docker'
          containerRegistry: ACRDEV
          repository: $(imageName)
          buildContext: $(System.DefaultWorkingDirectory)/docker
          arguments: '-f $(System.DefaultWorkingDirectory)/docker/src/EntrypointFullNamespace/Dockerfile --build-arg HTTP_PROXY=$(oc_http_proxy) --build-arg HTTPS_PROXY=$(oc_https_proxy) --build-arg NO_PROXY=$(oc_no_proxy) --build-arg http_proxy=$(oc_http_proxy) --build-arg https_proxy=$(oc_https_proxy) --build-arg no_proxy=$(oc_no_proxy) --build-arg BASE_IMAGE=$(base_image_dotnet6)'
          tags: |
            $(Build.BuildId)
            latest